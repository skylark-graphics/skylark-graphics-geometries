{"version":3,"sources":["skylark-graphics-gradients.js"],"names":["define","skylark","attach","langx","gradients","GradientPoint","klass","klassName","x","get","this","_","y","clone","notEqual","gp","width","height","equal","toString","xs","ys","_construct","props","undefined","Type","isString","fromString","s","a","split","fromArray","fromPlain","o","length","Color","GradientStop","offset","color","target","construct","parsed","Number","parsePercent","Gradient","endPoint","fromColor","startPoint","stops","toColor","addColorStop","push","LinearGradient","inherit","angle","type","webkitGradType","webKitPosn1","webKitPosn2","toCss","i","stop","pos","CssUtils","buildBackgroundImage","params","p","parseBackgroundImage","slice","map","item","RadialGradient","startRadius","endRadius","webKitRadius1","webKitRadius2","main"],"mappings":"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","file":"../skylark-graphics-gradients.js","sourcesContent":["define('skylark-graphics-gradients/gradients',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"graphics.gradients\",{});\r\n});\r\n\r\n\ndefine('skylark-graphics-gradients/GradientPoint',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./gradients\"\r\n], function(langx, gradients) {\r\n\r\n\tvar GradientPoint = langx.klass({\r\n\t\t\"klassName\"\t:\t\"GradientPoint\",\r\n\r\n\t\t\"x\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.x;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"y\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.y;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new GradientPoint(_.x,_.y);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*GradientPoint*/gp) {\r\n\t\t\treturn !gp || gp.x && gp.x.notEqual(this.width) || gp.y && gp.y.notEqual(this.height);\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*GradientPoint*/gp){\r\n\t\t\treturn  !this.notEqual(gp);\r\n\t\t},\r\n\r\n\t\t\"toString\" : function(){\r\n\t\t\tvar xs,ys,x = this.x,y= this.y;\r\n\t\t\txs = x.toString();\r\n\t\t\tif (xs == \"min\") {\r\n\t\t\t\txs = \"left\";\r\n\t\t\t} else if (xs == \"mid\") {\r\n\t\t\t\txs = \"center\";\r\n\t\t\t} else if (xs == \"max\") {\r\n\t\t\t\txs = \"right\";\r\n\t\t\t}\r\n\r\n\t\t\tys = y.toString();\r\n\t\t\tif (ys == \"min\") {\r\n\t\t\t\tys = \"top\";\r\n\t\t\t} else if (xs == \"mid\") {\r\n\t\t\t\tys = \"center\";\r\n\t\t\t} else if (xs == \"max\") {\r\n\t\t\t\tys = \"bottom\";\r\n\t\t\t}\r\n\r\n\t\t\treturn xs + \" \" + ys;\r\n\t\t},\t\r\n\t\t\r\n\t\t\"_construct\" : function(x,y){\r\n\t\t\tvar props = {};\r\n\t\t\tif (x != undefined) {\r\n\t\t\t\tif (Type.isString(x)) {\r\n\t\t\t\t\tif (x == \"left\") {\r\n\t\t\t\t\t\tx = \"min\";\r\n\t\t\t\t\t} else if (x == \"center\") {\r\n\t\t\t\t\t\tx = \"mid\";\r\n\t\t\t\t\t} else if (x == \"right\") {\r\n\t\t\t\t\t\tx = \"max\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprops.x = x;\r\n\t\t\t}\r\n\t\t\tif (y != undefined) {\r\n\t\t\t\tif (Type.isString(y)) {\r\n\t\t\t\t\tif (y == \"top\") {\r\n\t\t\t\t\t\ty = \"min\";\r\n\t\t\t\t\t} else if (y == \"center\") {\r\n\t\t\t\t\t\ty = \"mid\";\r\n\t\t\t\t\t} else if (y == \"bottom\") {\r\n\t\t\t\t\t\ty = \"max\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprops.y = y;\r\n\t\t\t}\r\n\t\t\tthis._ = props;\r\n\t\t}\t\t\r\n\t});\r\n\r\n\tGradientPoint.fromString = function(s) {\r\n\t\tvar a = s.split(\" \");\r\n        return GradientPoint.fromArray(a)\r\n\t};\r\n\r\n\tGradientPoint.fromPlain = function(o) {\r\n\t\treturn new GradientPoint(o.x,o.y);\r\n\t};\r\n\r\n\tGradientPoint.fromArray = function(a) {\r\n\t\treturn new GradientPoint(a[0],a.length>1?a[1]:\"center\");\r\n\t};\r\n\r\n\r\n\treturn gradients.GradientPoint = GradientPoint;\r\n\t\r\n});\t\r\n\r\n\ndefine('skylark-graphics-gradients/GradientStop',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-graphics-color\",\r\n\t\"./gradients\",\r\n],function(langx,Color,gradients) {\r\n\tvar GradientStop = langx.klass({\r\n\t\t\"klassName\": \"GradientStop\",\r\n\t\t\"offset\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.offset;\r\n\t\t\t}\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"color\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.color;\r\n\t\t\t}\t\t\r\n\t\t},\r\n        \r\n        equal: function(target) {\r\n            return !this.notEqual(target);\r\n        },\r\n\r\n        notEqual: function(target) {\r\n\t\t\treturn !target || \r\n\t\t\t\t\ttarget.offset != this.offset || \r\n\t\t\t\t\ttarget.color.notEqual(this.color);\r\n        },\r\n\t\t\r\n\t\t\"construct\"\t :\tfunction(offset,color){\r\n\t\t\tif (langx.isString(offset)) {\r\n\t\t\t\tvar parsed = Number.parsePercent(offset);\r\n\t\t\t\tif (parsed != null) {\r\n\t\t\t\t\toffset = parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._ = {\r\n\t\t\t\t\"offset\"\t:\toffset,\r\n\t\t\t\t\"color\"\t\t:\tcolor\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\t\r\n\treturn gradients.GradientStop = GradientStop;\r\n});\r\n\ndefine('skylark-graphics-gradients/Gradient',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-graphics-color\",\r\n\t\"./gradients\",\r\n\t\"./GradientPoint\",\r\n\t\"./GradientStop\"\r\n],function(langx,Color,gradients,GradientPoint,GradientStop) {\r\n\r\n\tvar Gradient = langx.klass({\r\n\r\n\t\t\"klassName\"\t:\t\"Gradient\",\r\n\r\n\t\t\"endPoint\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.endPoint;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"fromColor\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.fromColor;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"startPoint\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.startPoint;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"stops\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.stops;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"toColor\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.toColor;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddColorStop : function(offset,color) {\r\n\t\t\tthis._.stops.push(new GradientStop(offset,color));\r\n\t\t},\t\r\n\t\r\n\t\t\"_construct\"\t:\tfunction(){\r\n\t\t\tthis._ =  {\r\n            \t\tstops : []\r\n            \t}\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n\treturn gradients.Gradient = Gradient;\r\n\t\r\n});\t\r\n\r\n\ndefine('skylark-graphics-gradients/LinearGradient',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-graphics-color\",\r\n\t\"./gradients\",\r\n\t\"./Gradient\",\r\n\t\"./GradientPoint\",\r\n\t\"./GradientStop\"\r\n],function(langx,Color,gradients,Gradient,GradientPoint,GradientStop) {\r\n\t\r\n\tvar LinearGradient = Gradient.inherit({\r\n\t\t\"klassName\"\t:\t\"LinearGradient\",\r\n\r\n\t\t\"angle\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.angle;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"toString\" : function() {\r\n\t\t\tvar props = {\r\n\t\t\t\ttype : \"linear\",\r\n\t\t\t\twebkitGradType : \"linear\",\r\n\t\t\t\tstops : [],\r\n\t\t\t\twebKitPosn1 : this.startPoint.toString(),\r\n\t\t\t\twebKitPosn2 : this.endPoint.toString(),\r\n\t\t\t};\r\n\r\n\t\t\tprops.stops.push({\r\n\t\t\t\tcolor : Color.toCss(this.fromColor)\r\n\t\t\t});\r\n\r\n\t\t\tvar stops = this.stops;\r\n\t\t\tfor (var i=0;i<stops.length;i++){\r\n\t\t\t\tvar stop = stops[i];\r\n\t\t\t\tprops.stops.push({\r\n\t\t\t\t\tpos : stop.offset.toString(),\r\n\t\t\t\t\tcolor :stop.color.toString()\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprops.stops.push({\r\n\t\t\t\tcolor : this.toColor.toString()\r\n\t\t\t});\r\n\r\n\t\t\treturn CssUtils.buildBackgroundImage(props)[0];\r\n\t\t},\r\n\t\t\r\n\t\t\"_construct\"\t:\tfunction(params) {\r\n\t\t\tthis._ = {\r\n\t\t\t\t\"startPoint\":\tparams.startPoint,\r\n\t\t\t\t\"endPoint\"\t:\tparams.endPoint,\r\n\t\t\t\t\"fromColor\"\t:\tparams.fromColor,\r\n\t\t\t\t\"toColor\"\t:\tparams.toColor,\r\n\t\t\t\t\"angle\"\t\t:   params.angle\r\n\t\t\t};\r\n\r\n\t\t\tif (params.stops) {\r\n\t\t\t\tvar stops = params.stops;\r\n\t\t\t\tfor (var i = 0;i<stops.length;i++) {\r\n\t\t\t\t\tvar stop = stops[i];\r\n\t\t\t\t\tthis.addColorStop(stop.offset,stop.color);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tLinearGradient.fromString = function(s) {\r\n\t\tvar p = CssUtils.parseBackgroundImage(s);\r\n\t\tif (p.type == \"linear\" ) {\r\n\t\t\treturn new LinearGradient({\r\n\t\t\t\tstartPoint : p.webKitPosn1,\r\n\t\t\t\tendPoint   : p.webKitPosn2,\r\n\t\t\t\tfromColor  : p.stops[0].color,\r\n\t\t\t\ttoColor    : p.stops[p.stops.length-1].color,\r\n\t\t\t\tstops      : p.stops.slice(1,p.stops.length-1).map(function(item){\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toffset : item.pos,\r\n\t\t\t\t\t\tcolor : item.color\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\treturn gradients.LinearGradient = LinearGradient;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-gradients/RadialGradient',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-graphics-color\",\r\n\t\"./gradients\",\r\n\t\"./Gradient\",\r\n\t\"./GradientPoint\",\r\n\t\"./GradientStop\"\r\n],function(langx,Color,gradients,Gradient,GradientPoint,GradientStop) {\r\n\r\n\r\n\tvar RadialGradient = Gradient.inherit({\r\n\t\t\r\n\t\t\"klassName\"\t:\t\"RadialGradient\",\r\n\r\n\t\t\"startRadius\" : {\r\n\t\t\ttype : Number,\r\n\t\t},\r\n\t\t\"endRadius\" : {\r\n\t\t\ttype : Number,\r\n\t\t},\r\n\t\t\t\r\n\t\t\"toString\" : function() {\r\n\t\t\tvar props = {\r\n\t\t\t\ttype : \"radial\",\r\n\t\t\t\twebkitGradType : \"radial\",\r\n\t\t\t\tstops : [],\r\n\t\t\t\twebKitPosn1 : this.startPoint.toString(),\r\n\t\t\t\twebKitPosn2 : this.endPoint.toString(),\r\n\t\t\t\twebKitRadius1 : this.startRadius && this.startRadius.toString(),\r\n\t\t\t\twebKitRadius2 : this.endRadius && this.endRadius.toString()\r\n\t\t\t};\r\n\r\n\t\t\tprops.stops.push({\r\n\t\t\t\tcolor : Color.toCss(this.fromColor)\r\n\t\t\t});\r\n\r\n\t\t\tvar stops = this.stops;\r\n\t\t\tfor (var i=0;i<stops.length;i++){\r\n\t\t\t\tvar stop = stops[i];\r\n\t\t\t\tprops.stops.push({\r\n\t\t\t\t\tpos : stop.offset.toString(),\r\n\t\t\t\t\tcolor : stop.color.toString()\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprops.stops.push({\r\n\t\t\t\tcolor : Color.toCss(this.toColor)\r\n\t\t\t});\r\n\r\n\t\t\treturn CssUtils.buildBackgroundImage(props)[0];\r\n\t\t},\t\r\n\t\t\r\n\t\t\"_construct\"\t:\tfunction(params) {\r\n\t\t\tthis._ = {\r\n\t\t\t\t\"startPoint\":\tparams.startPoint,\r\n\t\t\t\t\"endPoint\"\t:\tparams.endPoint,\r\n\t\t\t\t\"fromColor\"\t:\tparams.fromColor,\r\n\t\t\t\t\"toColor\"\t:\tparams.toColor,\r\n\t\t\t\t\"startRadius\"\t:   params.startRadius,\r\n\t\t\t\t\"endRadius\"\t\t:   params.endRadius,\r\n\t\t\t};\r\n\r\n\t\t\tif (params.stops) {\r\n\t\t\t\tvar stops = params.stops;\r\n\t\t\t\tfor (var i = 0;i<stops.length;i++) {\r\n\t\t\t\t\tvar stop = stops[i];\r\n\t\t\t\t\tthis.addColorStop(stop.offset,stop.color);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tRadialGradient.fromString = function(s) {\r\n\t\tvar p = CssUtils.parseBackgroundImage(s);\r\n\t\tif (p.type == \"radial\" ) {\r\n\t\t\treturn new RadialGradient({\r\n\t\t\t\tstartPoint : p.webKitPosn1,\r\n\t\t\t\tendPoint   : p.webKitPosn2,\r\n\t\t\t\tstartRadius: p.webKitRadius1,\r\n\t\t\t\tendRadius  : p.webKitRadius2,\r\n\t\t\t\tfromColor  : p.stops[0].color,\r\n\t\t\t\ttoColor    : p.stops[p.stops.length-1].color,\r\n\r\n\t\t\t\tstops      : p.stops.slice(1,p.stops.length-1).map(function(item){\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toffset : item.pos,\r\n\t\t\t\t\t\tcolor : item.color\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\treturn gradients.RadialGradient = RadialGradient;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-gradients/main',[\r\n\t\"./gradients\",\r\n\t\"./Gradient\",\r\n\t\"./GradientPoint\",\r\n\t\"./GradientStop\",\r\n\t\"./LinearGradient\",\r\n\t\"./RadialGradient\"\r\n],function(gradients){\r\n\treturn gradients;\r\n});\r\n\r\n\ndefine('skylark-graphics-gradients', ['skylark-graphics-gradients/main'], function (main) { return main; });\n\n"]}